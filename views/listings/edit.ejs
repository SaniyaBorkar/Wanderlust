<% layout("/layouts/boilerplate") -%>

<script>
    function checkAndRedirect() {
        const home = localStorage.getItem('home');
        console.log("Check home in localStorage:", home);

        if (home) {
            // Remove the flag from local storage
            localStorage.removeItem('home');
            console.log("Redirecting to /listings");

            // Redirect to the main listings page
            window.location.href = '/listings';
        }
    }

    // Check immediately when the script runs
    console.log("Initial check for home in localStorage");
    checkAndRedirect();

    // Add an interval to check periodically for the 'home' item
    const intervalId = setInterval(() => {
        console.log("Interval check for home in localStorage");
        checkAndRedirect();
    }, 100);

    // Stop checking after 5 seconds (adjust as necessary)
    setTimeout(() => {
        clearInterval(intervalId);
        console.log("Stopped interval checks for home in localStorage");
    }, 5000);

    // Add the event listener for 'DOMContentLoaded'
    document.addEventListener('DOMContentLoaded', function() {
        console.log("DOM fully loaded and parsed. Final check for home in localStorage");
        checkAndRedirect();
    });
</script>
<!-- <script>
    function checkAndRedirect() {
        const home = localStorage.getItem('home');
        console.log("Check home in localStorage:", home);

        if (home) {
            // Remove the flag from local storage
            localStorage.removeItem('home');
            console.log("Redirecting to /listings");

            // Redirect to the main listings page
            window.location.href = '/listings';
        }
    }

    // Check immediately when the script runs
    console.log("Initial check for home in localStorage");
    checkAndRedirect();

    // Add an interval to check periodically for the 'home' item
    const intervalId = setInterval(() => {
        console.log("Interval check for home in localStorage");
        checkAndRedirect();
    }, 100);

    // Stop checking after 5 seconds (adjust as necessary)
    setTimeout(() => {
        clearInterval(intervalId);
        console.log("Stopped interval checks for home in localStorage");
    }, 5000);

    // Add the event listener for 'DOMContentLoaded'
    document.addEventListener('DOMContentLoaded', function() {
        console.log("DOM fully loaded and parsed. Final check for home in localStorage");
        checkAndRedirect();
    });
</script> --> 
<body>
    <div class="row mt-3">
        <div class="col-8 offset-2">
    <h3>Edit your listing</h3>
    <form method="POST" action="/listings/<%= listing._id %>?_method=PUT" novalidate class="needs-validation" enctype="multipart/form-data"> 
        <div  class="mb-3">
            <lable for="title" class="form-label">Title</lable>
            <input type="text" name="listing[title]" value="<%= listing.title %>" class="form-control" required> 
            
        </div>
        <div  class="mb-3">
            <lable for="description" class="form-label">Description</lable>
            <textarea name="listing[description]"  class="form-control" required><%=listing.description %> </textarea>
            <div class="invalid-feedback">
                Please enter a short description 
            </div>
        </div>
        
        <div  class="mb-3">
            <p>Original listing image</p>
            <img src="<%= originalImageUrl %>">
        </div>

        <div  class="mb-3">
            <lable for="image" class="form-label">Upload New Image</lable>
            <input  name="listing[image]" class="form-control" type="file" > 
            <div class="invalid-feedback">
                Please enter a url 
            </div>
        </div>

        <div class="row">
            <div  class="mb-3 col-md-4">
                <lable for="price" class="form-label">Price</lable>
                <input type="number" name="listing[price]" class="form-control" value="<%= listing.price %>" required> 
                <div class="invalid-feedback">
                    Price should be valid
                </div>
            </div>

            <div  class="mb-3 col-md-8">
                <lable for="price" class="form-label">Country</lable>
                <input type="text" name="listing[country]" class="form-control" value="<%= listing.country %>" required> 
                <div class="invalid-feedback">
                    Country should be valid
                </div>
            </div>
        </div>
        
        
        
        <div  class="mb-3">
            <lable for="price" class="form-label">Loaction</lable>
            <input type="text" name="listing[location]" class="form-control" value="<%= listing.location %>" required> 
            <div class="invalid-feedback">
                Location should be valid
            </div>
        </div>
        
        
        
        <button class="btn btn-dark edit-btn mt-3">Edit</button>
        <br><br>
    </form>
</div>
</div>

</body>
